{"ast":null,"code":"var _jsxFileName = \"/Users/ayushbhanot/Documents/Coding/SideProjects/SideProject-AITranscriptionApp/Frontend-NoteTakingTool/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport NotesUI from './components/NotesUI';\nimport { startSpeechRecognition, stopRecognition, getFinalTranscript, resetTranscript } from './services/audioRecording';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [generatedNotes, setGeneratedNotes] = useState({});\n  const handleStartRecording = async () => {\n    if (isRecording) return;\n    setIsRecording(true);\n    try {\n      await startSpeechRecognition();\n    } catch (error) {\n      console.error(\"Error starting speech recognition:\", error);\n      setIsRecording(false);\n    }\n  };\n  const handleReset = () => {\n    resetTranscript(); // Manually reset the transcript\n  };\n  const handleStopRecording = async () => {\n    try {\n      console.log(\"Stopping recognition...\");\n      stopRecognition();\n      setIsRecording(false); // Disable stop button after stopping\n\n      const finalTranscript = getFinalTranscript();\n      if (!finalTranscript.trim()) {\n        console.log(\"Final transcript is empty. Not sending to server.\");\n        return; // Exit if no transcript exists\n      }\n      console.log(\"Sending final transcript to server:\", finalTranscript);\n\n      // Send the transcript to the backend for note generation\n      const response = await axios.post('http://localhost:3001/transcribe', {\n        transcript: finalTranscript\n      });\n      const notes = response.data.notes;\n      console.log(\"Received notes:\", notes);\n      setGeneratedNotes(notes); // Pass the notes to your NotesUI component\n    } catch (error) {\n      console.error(\"Error stopping speech recognition or sending transcript:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Speech to Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartRecording,\n      disabled: isRecording,\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStopRecording,\n      disabled: !isRecording,\n      children: \"Stop Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NotesUI, {\n      notes: generatedNotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"5yUDuHDwj7Hxx7ZUoQi0+Ir7hh4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","NotesUI","startSpeechRecognition","stopRecognition","getFinalTranscript","resetTranscript","jsxDEV","_jsxDEV","App","_s","isRecording","setIsRecording","generatedNotes","setGeneratedNotes","handleStartRecording","error","console","handleReset","handleStopRecording","log","finalTranscript","trim","response","post","transcript","notes","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/ayushbhanot/Documents/Coding/SideProjects/SideProject-AITranscriptionApp/Frontend-NoteTakingTool/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport NotesUI from './components/NotesUI';\nimport { startSpeechRecognition, stopRecognition, getFinalTranscript, resetTranscript } from './services/audioRecording';\n\nfunction App() {\n    const [isRecording, setIsRecording] = useState(false);\n    const [generatedNotes, setGeneratedNotes] = useState({});\n\n    const handleStartRecording = async () => {\n        if (isRecording) return;\n        setIsRecording(true);\n        try {\n            await startSpeechRecognition();\n        } catch (error) {\n            console.error(\"Error starting speech recognition:\", error);\n            setIsRecording(false);\n        }\n    };\n    const handleReset = () => {\n        resetTranscript();  // Manually reset the transcript\n    };\n    const handleStopRecording = async () => {\n        try {\n            console.log(\"Stopping recognition...\");\n            stopRecognition();\n            setIsRecording(false); // Disable stop button after stopping\n\n            const finalTranscript = getFinalTranscript();\n\n            if (!finalTranscript.trim()) {\n                console.log(\"Final transcript is empty. Not sending to server.\");\n                return; // Exit if no transcript exists\n            }\n\n            console.log(\"Sending final transcript to server:\", finalTranscript);\n\n            // Send the transcript to the backend for note generation\n            const response = await axios.post('http://localhost:3001/transcribe', { transcript: finalTranscript });\n            const notes = response.data.notes;\n\n            console.log(\"Received notes:\", notes);\n            setGeneratedNotes(notes);  // Pass the notes to your NotesUI component\n        } catch (error) {\n            console.error(\"Error stopping speech recognition or sending transcript:\", error);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Speech to Notes</h1>\n            <button onClick={handleStartRecording} disabled={isRecording}>\n                Start Recording\n            </button>\n            <button onClick={handleStopRecording} disabled={!isRecording}>\n                Stop Recording\n            </button>\n            <button onClick={handleReset}>Reset</button>\n            <NotesUI notes={generatedNotes} /> {/* Pass generated notes to your NotesUI */}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}