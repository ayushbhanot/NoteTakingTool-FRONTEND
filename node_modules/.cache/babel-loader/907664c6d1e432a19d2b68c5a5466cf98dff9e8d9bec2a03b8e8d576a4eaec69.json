{"ast":null,"code":"// Ensure this is in your noteservice.js file\nexport const sendTranscriptToBackend = async transcript => {\n  try {\n    const response = await fetch('http://localhost:3001/generateNotes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        transcript\n      }) // Send transcript to backend\n    });\n    const data = await response.json();\n    console.log('Generated Notes:', data.notes); // Display the generated notes\n    return data.notes; // Return the generated notes to be used in the App component\n  } catch (error) {\n    console.error('Error sending transcript to backend:', error);\n    return null; // Return null if an error occurs\n  }\n};","map":{"version":3,"names":["sendTranscriptToBackend","transcript","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","notes","error"],"sources":["/Users/ayushbhanot/Documents/Coding/Riipen/AITranscriptionApp/aitranscriptionapp/src/services/noteService.js"],"sourcesContent":["// Ensure this is in your noteservice.js file\nexport const sendTranscriptToBackend = async (transcript) => {\n    try {\n        const response = await fetch('http://localhost:3001/generateNotes', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ transcript }),  // Send transcript to backend\n        });\n\n        const data = await response.json();\n        console.log('Generated Notes:', data.notes); // Display the generated notes\n        return data.notes;  // Return the generated notes to be used in the App component\n    } catch (error) {\n        console.error('Error sending transcript to backend:', error);\n        return null;  // Return null if an error occurs\n    }\n};\n\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,uBAAuB,GAAG,MAAOC,UAAU,IAAK;EACzD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;MAChEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP;MAAW,CAAC,CAAC,CAAG;IAC3C,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC;IAC7C,OAAOJ,IAAI,CAACI,KAAK,CAAC,CAAE;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZH,OAAO,CAACG,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC5D,OAAO,IAAI,CAAC,CAAE;EAClB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}