{"ast":null,"code":"var _jsxFileName = \"/Users/ayushbhanot/Documents/Coding/Riipen/AITranscriptionApp/aitranscriptionapp/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { startSpeechRecognition, stopRecognition } from './services/audioRecording';\nimport NotesUI from './components/NotesUI';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [generatedNotes, setGeneratedNotes] = useState({});\n  const handleStartRecording = async () => {\n    if (isRecording) return;\n    setIsRecording(true);\n    try {\n      await startSpeechRecognition();\n    } catch (error) {\n      console.error(\"Error starting speech recognition:\", error);\n      setIsRecording(false);\n    }\n  };\n  const handleStopRecording = async () => {\n    try {\n      console.log(\"Stopping recognition...\");\n      stopRecognition();\n\n      // Small delay to ensure final transcript is captured\n      await new Promise(resolve => setTimeout(resolve, 500));\n      const finalTranscript = window.finalTranscript; // Assuming this is set somewhere in the speech recognition logic\n      if (!finalTranscript || finalTranscript.trim() === '') {\n        console.log(\"Final transcript is empty.\");\n        return;\n      }\n      console.log(\"Sending final transcript to server:\", finalTranscript);\n      const response = await axios.post('http://localhost:3001/transcribe', {\n        transcript: finalTranscript\n      });\n      const rawNotes = response.data.notes;\n\n      // Call `organizeNotesByTopic` to group the notes\n      const organizedNotes = organizeNotesByTopic(rawNotes);\n      console.log(\"Organized Notes:\", organizedNotes);\n      setGeneratedNotes(organizedNotes); // Pass the organized notes to NotesUI\n    } catch (error) {\n      console.error(\"Error stopping speech recognition or sending transcript:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Speech to Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartRecording,\n      disabled: isRecording,\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStopRecording,\n      disabled: !isRecording,\n      children: \"Stop Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NotesUI, {\n      notes: generatedNotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"5yUDuHDwj7Hxx7ZUoQi0+Ir7hh4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","startSpeechRecognition","stopRecognition","NotesUI","axios","jsxDEV","_jsxDEV","App","_s","isRecording","setIsRecording","generatedNotes","setGeneratedNotes","handleStartRecording","error","console","handleStopRecording","log","Promise","resolve","setTimeout","finalTranscript","window","trim","response","post","transcript","rawNotes","data","notes","organizedNotes","organizeNotesByTopic","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/ayushbhanot/Documents/Coding/Riipen/AITranscriptionApp/aitranscriptionapp/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { startSpeechRecognition, stopRecognition } from './services/audioRecording';\nimport NotesUI from './components/NotesUI';\nimport axios from 'axios';\n\nfunction App() {\n    const [isRecording, setIsRecording] = useState(false);\n    const [generatedNotes, setGeneratedNotes] = useState({});\n\n    const handleStartRecording = async () => {\n        if (isRecording) return;\n        setIsRecording(true);\n        try {\n            await startSpeechRecognition();\n        } catch (error) {\n            console.error(\"Error starting speech recognition:\", error);\n            setIsRecording(false);\n        }\n    };\n\n    const handleStopRecording = async () => {\n        try {\n            console.log(\"Stopping recognition...\");\n            stopRecognition();\n            \n            // Small delay to ensure final transcript is captured\n            await new Promise(resolve => setTimeout(resolve, 500)); \n\n            const finalTranscript = window.finalTranscript; // Assuming this is set somewhere in the speech recognition logic\n            if (!finalTranscript || finalTranscript.trim() === '') {\n                console.log(\"Final transcript is empty.\");\n                return;\n            }\n    \n            console.log(\"Sending final transcript to server:\", finalTranscript);\n            const response = await axios.post('http://localhost:3001/transcribe', { transcript: finalTranscript });\n            const rawNotes = response.data.notes;\n    \n            // Call `organizeNotesByTopic` to group the notes\n            const organizedNotes = organizeNotesByTopic(rawNotes);\n            console.log(\"Organized Notes:\", organizedNotes);\n            setGeneratedNotes(organizedNotes); // Pass the organized notes to NotesUI\n\n        } catch (error) {\n            console.error(\"Error stopping speech recognition or sending transcript:\", error);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Speech to Notes</h1>\n            <button onClick={handleStartRecording} disabled={isRecording}>\n                Start Recording\n            </button>\n            <button onClick={handleStopRecording} disabled={!isRecording}>\n                Stop Recording\n            </button>\n            <NotesUI notes={generatedNotes} />\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}