{"ast":null,"code":"var _jsxFileName = \"/Users/ayushbhanot/Documents/Coding/Riipen/AITranscriptionApp/aitranscriptionapp/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { startSpeechRecognition, stopRecognition } from './services/audioRecording';\nimport NotesUI from './components/NotesUI';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [finalTranscript, setFinalTranscript] = useState(''); // State for final transcript\n  const [generatedNotes, setGeneratedNotes] = useState({});\n\n  // Callback to update the final transcript\n  const updateFinalTranscript = transcript => {\n    setFinalTranscript(transcript);\n  };\n  const handleStartRecording = async () => {\n    if (isRecording) return;\n    setIsRecording(true);\n    try {\n      // Pass the callback to startSpeechRecognition\n      await startSpeechRecognition(updateFinalTranscript);\n    } catch (error) {\n      console.error(\"Error starting speech recognition:\", error);\n      setIsRecording(false);\n    }\n  };\n  const handleStopRecording = async () => {\n    if (!isRecording) return;\n    try {\n      // Stopping recognition\n      await stopRecognition();\n      console.log('Final transcript being sent:', finalTranscript); // Log to ensure finalTranscript has data\n\n      // Send transcript to backend\n      const response = await axios.post('http://localhost:3001/transcribe', {\n        transcript: finalTranscript.trim() // Send final transcript as JSON, ensure it's not empty\n      });\n      console.log('Transcription response:', response.data);\n      setGeneratedNotes(response.data.notes); // Update generated notes state\n    } catch (error) {\n      console.error(\"Error stopping speech recognition or sending transcript:\", error);\n    } finally {\n      setIsRecording(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Speech to Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartRecording,\n      disabled: isRecording,\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStopRecording,\n      disabled: !isRecording,\n      children: \"Stop Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NotesUI, {\n      notes: generatedNotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"BVmj086UlzwADrfD2dbd+zTESR8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","startSpeechRecognition","stopRecognition","NotesUI","axios","jsxDEV","_jsxDEV","App","_s","isRecording","setIsRecording","finalTranscript","setFinalTranscript","generatedNotes","setGeneratedNotes","updateFinalTranscript","transcript","handleStartRecording","error","console","handleStopRecording","log","response","post","trim","data","notes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/ayushbhanot/Documents/Coding/Riipen/AITranscriptionApp/aitranscriptionapp/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { startSpeechRecognition, stopRecognition } from './services/audioRecording';\nimport NotesUI from './components/NotesUI';\nimport axios from 'axios';\n\nfunction App() {\n    const [isRecording, setIsRecording] = useState(false);\n    const [finalTranscript, setFinalTranscript] = useState(''); // State for final transcript\n    const [generatedNotes, setGeneratedNotes] = useState({});\n\n    // Callback to update the final transcript\n    const updateFinalTranscript = (transcript) => {\n        setFinalTranscript(transcript);\n    };\n\n    const handleStartRecording = async () => {\n        if (isRecording) return;\n        setIsRecording(true);\n        try {\n            // Pass the callback to startSpeechRecognition\n            await startSpeechRecognition(updateFinalTranscript);\n        } catch (error) {\n            console.error(\"Error starting speech recognition:\", error);\n            setIsRecording(false);\n        }\n    };\n\n    const handleStopRecording = async () => {\n        if (!isRecording) return; \n        try {\n            // Stopping recognition\n            await stopRecognition();\n    \n            console.log('Final transcript being sent:', finalTranscript); // Log to ensure finalTranscript has data\n    \n            // Send transcript to backend\n            const response = await axios.post('http://localhost:3001/transcribe', {\n                transcript: finalTranscript.trim()  // Send final transcript as JSON, ensure it's not empty\n            });\n    \n            console.log('Transcription response:', response.data);\n            setGeneratedNotes(response.data.notes); // Update generated notes state\n        } catch (error) {\n            console.error(\"Error stopping speech recognition or sending transcript:\", error);\n        } finally {\n            setIsRecording(false);\n        }\n    };\n    \n    \n    \n\n    return (\n        <div className=\"App\">\n            <h1>Speech to Notes</h1>\n            <button onClick={handleStartRecording} disabled={isRecording}>\n                Start Recording\n            </button>\n            <button onClick={handleStopRecording} disabled={!isRecording}>\n                Stop Recording\n            </button>\n            <NotesUI notes={generatedNotes} />\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}