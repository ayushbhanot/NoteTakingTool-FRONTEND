{"ast":null,"code":"var _jsxFileName = \"/Users/ayushbhanot/Documents/Coding/Riipen/AITranscriptionApp/aitranscriptionapp/src/App.js\",\n  _s = $RefreshSig$();\n/*import React, { useState } from 'react';\nimport { startSpeechRecognition, stopSpeechRecognition } from './services/audioRecording'; // Adjust path as needed\n\nfunction App() {\n    const [isRecording, setIsRecording] = useState(false);\n\n    const handleStartRecording = async () => {\n        if (isRecording) return; // Prevent starting a new recording if one is already active\n        setIsRecording(true);\n        try {\n            await startSpeechRecognition();\n        } catch (error) {\n            console.error(\"Error starting speech recognition:\", error);\n            setIsRecording(false);\n        }\n    };\n\n    const handleStopRecording = async () => {\n        if (!isRecording) return; // Prevent stopping if no recording is active\n        try {\n            await stopSpeechRecognition();\n        } catch (error) {\n            console.error(\"Error stopping speech recognition:\", error);\n        } finally {\n            setIsRecording(false);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Zoom/Google Meet Audio Recorder</h1>\n            <button onClick={handleStartRecording} disabled={isRecording}>\n                Start Speech Recognition\n            </button>\n            <button onClick={handleStopRecording} disabled={!isRecording}>\n                Stop Speech Recognition\n            </button>\n        </div>\n    );\n}\n\nexport default App;\n*/\n/* COMMENTED OUT MEDIARECORDER-BASED HANDLERS */\nimport React, { useState } from 'react';\nimport { startRecording, stopRecording } from './services/audioRecording'; // Ensure paths are correct\nimport NotesUI from './components/NotesUI'; // Adjust path if necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [generatedNotes, setGeneratedNotes] = useState({}); // State to hold the notes\n  const [isRecording, setIsRecording] = useState(false); // State to manage recording\n\n  // Function to handle starting the recording\n  const handleStartRecording = async () => {\n    if (!isRecording) {\n      setIsRecording(true); // Set recording to true to disable start button\n      await startRecording();\n    }\n  };\n\n  // Function to handle stopping the recording\n  const handleStopRecording = async () => {\n    if (isRecording) {\n      setIsRecording(false); // Set recording to false to enable start button\n      await stopRecording();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Audio Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartRecording,\n      disabled: isRecording,\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStopRecording,\n      disabled: !isRecording,\n      children: \"Stop Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NotesUI, {\n      notes: generatedNotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"TQlM82X7ylHTXqv4KzZ6HE4NBsA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","startRecording","stopRecording","NotesUI","jsxDEV","_jsxDEV","App","_s","generatedNotes","setGeneratedNotes","isRecording","setIsRecording","handleStartRecording","handleStopRecording","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","notes","_c","$RefreshReg$"],"sources":["/Users/ayushbhanot/Documents/Coding/Riipen/AITranscriptionApp/aitranscriptionapp/src/App.js"],"sourcesContent":["/*import React, { useState } from 'react';\nimport { startSpeechRecognition, stopSpeechRecognition } from './services/audioRecording'; // Adjust path as needed\n\nfunction App() {\n    const [isRecording, setIsRecording] = useState(false);\n\n    const handleStartRecording = async () => {\n        if (isRecording) return; // Prevent starting a new recording if one is already active\n        setIsRecording(true);\n        try {\n            await startSpeechRecognition();\n        } catch (error) {\n            console.error(\"Error starting speech recognition:\", error);\n            setIsRecording(false);\n        }\n    };\n\n    const handleStopRecording = async () => {\n        if (!isRecording) return; // Prevent stopping if no recording is active\n        try {\n            await stopSpeechRecognition();\n        } catch (error) {\n            console.error(\"Error stopping speech recognition:\", error);\n        } finally {\n            setIsRecording(false);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Zoom/Google Meet Audio Recorder</h1>\n            <button onClick={handleStartRecording} disabled={isRecording}>\n                Start Speech Recognition\n            </button>\n            <button onClick={handleStopRecording} disabled={!isRecording}>\n                Stop Speech Recognition\n            </button>\n        </div>\n    );\n}\n\nexport default App;\n*/\n/* COMMENTED OUT MEDIARECORDER-BASED HANDLERS */\nimport React, { useState } from 'react';\nimport { startRecording, stopRecording } from './services/audioRecording'; // Ensure paths are correct\nimport NotesUI from './components/NotesUI';  // Adjust path if necessary\n\nconst App = () => {\n    const [generatedNotes, setGeneratedNotes] = useState({});  // State to hold the notes\n    const [isRecording, setIsRecording] = useState(false);     // State to manage recording\n\n    // Function to handle starting the recording\n    const handleStartRecording = async () => {\n        if (!isRecording) {\n            setIsRecording(true);  // Set recording to true to disable start button\n            await startRecording();\n        }\n    };\n\n    // Function to handle stopping the recording\n    const handleStopRecording = async () => {\n        if (isRecording) {\n            setIsRecording(false);  // Set recording to false to enable start button\n            await stopRecording();\n        }\n    };\n\n    return (\n        <div>\n            <h1>Audio Notes</h1>\n            \n            <button onClick={handleStartRecording} disabled={isRecording}>\n                Start Recording\n            </button>\n            <button onClick={handleStopRecording} disabled={!isRecording}>\n                Stop Recording\n            </button>\n            \n            {/* Render Notes UI and pass down generated notes */}\n            <NotesUI notes={generatedNotes} />\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,EAAEC,aAAa,QAAQ,2BAA2B,CAAC,CAAC;AAC3E,OAAOC,OAAO,MAAM,sBAAsB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;EAC3D,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAK;;EAE3D;EACA,MAAMY,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI,CAACF,WAAW,EAAE;MACdC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAE;MACvB,MAAMV,cAAc,CAAC,CAAC;IAC1B;EACJ,CAAC;;EAED;EACA,MAAMY,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAIH,WAAW,EAAE;MACbC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAE;MACxB,MAAMT,aAAa,CAAC,CAAC;IACzB;EACJ,CAAC;EAED,oBACIG,OAAA;IAAAS,QAAA,gBACIT,OAAA;MAAAS,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEpBb,OAAA;MAAQc,OAAO,EAAEP,oBAAqB;MAACQ,QAAQ,EAAEV,WAAY;MAAAI,QAAA,EAAC;IAE9D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTb,OAAA;MAAQc,OAAO,EAAEN,mBAAoB;MAACO,QAAQ,EAAE,CAACV,WAAY;MAAAI,QAAA,EAAC;IAE9D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGTb,OAAA,CAACF,OAAO;MAACkB,KAAK,EAAEb;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEd,CAAC;AAACX,EAAA,CAnCID,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAqCT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}