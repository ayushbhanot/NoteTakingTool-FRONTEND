{"ast":null,"code":"let recognition,\n  finalTranscript = '',\n  isRecognitionRunning = false;\nasync function requestMicPermission() {\n  try {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    stream.getTracks().forEach(track => track.stop());\n    return true;\n  } catch (error) {\n    alert('Microphone access is required.');\n    return false;\n  }\n}\nfunction initializeRecognition() {\n  window.SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n  if (!window.SpeechRecognition) {\n    alert('Browser does not support SpeechRecognition API.');\n    return;\n  }\n  recognition = new window.SpeechRecognition();\n  recognition.continuous = true;\n  recognition.interimResults = true;\n  recognition.lang = 'en-US';\n  recognition.onresult = event => {\n    let interim = '';\n    for (let i = event.resultIndex; i < event.results.length; i++) {\n      const transcript = event.results[i][0].transcript;\n      if (event.results[i].isFinal) finalTranscript += transcript + ' ';else interim += transcript;\n    }\n    if (interim.length > 250) restartRecognition();\n  };\n  recognition.onerror = () => restartRecognition();\n  recognition.onend = () => isRecognitionRunning && restartRecognition();\n}\nfunction startRecognition() {\n  if (!isRecognitionRunning) {\n    recognition.start();\n    isRecognitionRunning = true;\n  }\n}\nfunction restartRecognition() {\n  recognition.stop();\n  recognition.onend = () => {\n    recognition.start();\n    isRecognitionRunning = true;\n  };\n}\nexport async function startSpeechRecognition() {\n  if (await requestMicPermission()) {\n    if (!recognition) initializeRecognition();\n    startRecognition();\n  }\n}\nexport function stopRecognition() {\n  if (isRecognitionRunning) recognition.stop();\n  isRecognitionRunning = false;\n}","map":{"version":3,"names":["recognition","finalTranscript","isRecognitionRunning","requestMicPermission","stream","navigator","mediaDevices","getUserMedia","audio","getTracks","forEach","track","stop","error","alert","initializeRecognition","window","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","lang","onresult","event","interim","i","resultIndex","results","length","transcript","isFinal","restartRecognition","onerror","onend","startRecognition","start","startSpeechRecognition","stopRecognition"],"sources":["/Users/ayushbhanot/Documents/Coding/Riipen/AITranscriptionApp/aitranscriptionapp/src/services/audioRecording.js"],"sourcesContent":["let recognition, finalTranscript = '', isRecognitionRunning = false;\n\nasync function requestMicPermission() {\n    try {\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        stream.getTracks().forEach(track => track.stop());\n        return true;\n    } catch (error) {\n        alert('Microphone access is required.');\n        return false;\n    }\n}\n\nfunction initializeRecognition() {\n    window.SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!window.SpeechRecognition) {\n        alert('Browser does not support SpeechRecognition API.');\n        return;\n    }\n\n    recognition = new window.SpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'en-US';\n\n    recognition.onresult = (event) => {\n        let interim = '';\n        for (let i = event.resultIndex; i < event.results.length; i++) {\n            const transcript = event.results[i][0].transcript;\n            if (event.results[i].isFinal) finalTranscript += transcript + ' ';\n            else interim += transcript;\n        }\n        if (interim.length > 250) restartRecognition();\n    };\n\n    recognition.onerror = () => restartRecognition();\n    recognition.onend = () => isRecognitionRunning && restartRecognition();\n}\n\nfunction startRecognition() {\n    if (!isRecognitionRunning) {\n        recognition.start();\n        isRecognitionRunning = true;\n    }\n}\n\nfunction restartRecognition() {\n    recognition.stop();\n    recognition.onend = () => {\n        recognition.start();\n        isRecognitionRunning = true;\n    };\n}\n\nexport async function startSpeechRecognition() {\n    if (await requestMicPermission()) {\n        if (!recognition) initializeRecognition();\n        startRecognition();\n    }\n}\n\nexport function stopRecognition() {\n    if (isRecognitionRunning) recognition.stop();\n    isRecognitionRunning = false;\n}\n"],"mappings":"AAAA,IAAIA,WAAW;EAAEC,eAAe,GAAG,EAAE;EAAEC,oBAAoB,GAAG,KAAK;AAEnE,eAAeC,oBAAoBA,CAAA,EAAG;EAClC,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACzEJ,MAAM,CAACK,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;IACjD,OAAO,IAAI;EACf,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,KAAK,CAAC,gCAAgC,CAAC;IACvC,OAAO,KAAK;EAChB;AACJ;AAEA,SAASC,qBAAqBA,CAAA,EAAG;EAC7BC,MAAM,CAACC,iBAAiB,GAAGD,MAAM,CAACC,iBAAiB,IAAID,MAAM,CAACE,uBAAuB;EACrF,IAAI,CAACF,MAAM,CAACC,iBAAiB,EAAE;IAC3BH,KAAK,CAAC,iDAAiD,CAAC;IACxD;EACJ;EAEAd,WAAW,GAAG,IAAIgB,MAAM,CAACC,iBAAiB,CAAC,CAAC;EAC5CjB,WAAW,CAACmB,UAAU,GAAG,IAAI;EAC7BnB,WAAW,CAACoB,cAAc,GAAG,IAAI;EACjCpB,WAAW,CAACqB,IAAI,GAAG,OAAO;EAE1BrB,WAAW,CAACsB,QAAQ,GAAIC,KAAK,IAAK;IAC9B,IAAIC,OAAO,GAAG,EAAE;IAChB,KAAK,IAAIC,CAAC,GAAGF,KAAK,CAACG,WAAW,EAAED,CAAC,GAAGF,KAAK,CAACI,OAAO,CAACC,MAAM,EAAEH,CAAC,EAAE,EAAE;MAC3D,MAAMI,UAAU,GAAGN,KAAK,CAACI,OAAO,CAACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAACI,UAAU;MACjD,IAAIN,KAAK,CAACI,OAAO,CAACF,CAAC,CAAC,CAACK,OAAO,EAAE7B,eAAe,IAAI4B,UAAU,GAAG,GAAG,CAAC,KAC7DL,OAAO,IAAIK,UAAU;IAC9B;IACA,IAAIL,OAAO,CAACI,MAAM,GAAG,GAAG,EAAEG,kBAAkB,CAAC,CAAC;EAClD,CAAC;EAED/B,WAAW,CAACgC,OAAO,GAAG,MAAMD,kBAAkB,CAAC,CAAC;EAChD/B,WAAW,CAACiC,KAAK,GAAG,MAAM/B,oBAAoB,IAAI6B,kBAAkB,CAAC,CAAC;AAC1E;AAEA,SAASG,gBAAgBA,CAAA,EAAG;EACxB,IAAI,CAAChC,oBAAoB,EAAE;IACvBF,WAAW,CAACmC,KAAK,CAAC,CAAC;IACnBjC,oBAAoB,GAAG,IAAI;EAC/B;AACJ;AAEA,SAAS6B,kBAAkBA,CAAA,EAAG;EAC1B/B,WAAW,CAACY,IAAI,CAAC,CAAC;EAClBZ,WAAW,CAACiC,KAAK,GAAG,MAAM;IACtBjC,WAAW,CAACmC,KAAK,CAAC,CAAC;IACnBjC,oBAAoB,GAAG,IAAI;EAC/B,CAAC;AACL;AAEA,OAAO,eAAekC,sBAAsBA,CAAA,EAAG;EAC3C,IAAI,MAAMjC,oBAAoB,CAAC,CAAC,EAAE;IAC9B,IAAI,CAACH,WAAW,EAAEe,qBAAqB,CAAC,CAAC;IACzCmB,gBAAgB,CAAC,CAAC;EACtB;AACJ;AAEA,OAAO,SAASG,eAAeA,CAAA,EAAG;EAC9B,IAAInC,oBAAoB,EAAEF,WAAW,CAACY,IAAI,CAAC,CAAC;EAC5CV,oBAAoB,GAAG,KAAK;AAChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}